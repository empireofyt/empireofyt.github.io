{
    "version": "https://jsonfeed.org/version/1",
    "title": "null",
    "description": "",
    "home_page_url": "https://empireofyt.github.io",
    "items": [
        {
            "id": "https://empireofyt.github.io/computer-science/github/github%20-%20%E5%89%AF%E6%9C%AC/",
            "url": "https://empireofyt.github.io/computer-science/github/github%20-%20%E5%89%AF%E6%9C%AC/",
            "title": "github使用教程",
            "date_published": "2023-02-02T08:29:00.276Z",
            "content_html": "<h1 id=\"github使用教程\"><a class=\"markdownIt-Anchor\" href=\"#github使用教程\">#</a> github 使用教程</h1>\n<h2 id=\"一-首次上传此文件夹\"><a class=\"markdownIt-Anchor\" href=\"#一-首次上传此文件夹\">#</a> 一 首次上传此文件夹</h2>\n<h3 id=\"一-github与git连接本地git仓库\"><a class=\"markdownIt-Anchor\" href=\"#一-github与git连接本地git仓库\">#</a> （一） github 与 git 连接–本地 Git 仓库</h3>\n<ol>\n<li>\n<p>本地文件夹</p>\n<ul>\n<li>右键 - Git Bash-</li>\n<li>输入 “git init” 初始化成一个 Git 可管理的仓库</li>\n</ul>\n</li>\n<li>\n<p>将本地文件 add 到 Git 仓库上</p>\n<ul>\n<li>git add .  //. 表示添加该目录下所有文件</li>\n<li>git status // 用来查看仓库状态</li>\n</ul>\n</li>\n<li>\n<p>把项目提交到仓库</p>\n<ul>\n<li>git commit -m &quot; 注释 “”</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"二-github和git连接远程连接\"><a class=\"markdownIt-Anchor\" href=\"#二-github和git连接远程连接\">#</a> （二） github 和 git 连接–远程连接</h3>\n<ol>\n<li>创建 SSH key（只用一次就行了）</li>\n<li>在 github 上新建仓库</li>\n<li>关联远程仓库\n<ul>\n<li>git remote add origin <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1hYWCVFRiVCQyU4OCVFOCU4NyVBQSVFNSVCNyVCMSVFNCVCQiU5MyVFNSVCQSU5MyVFRiVCQyU4OQ==\">https://github.com/XXX（自己仓库）</span></li>\n</ul>\n</li>\n<li>本地内容上传\n<ul>\n<li>git push (-u) origin main   // 初次上传必须加上 - u</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"二-后续更新上传\"><a class=\"markdownIt-Anchor\" href=\"#二-后续更新上传\">#</a> 二 后续更新上传</h2>\n<ol>\n<li>将本地文件 add 到 Git 仓库上\n<ul>\n<li>git add .  //. 表示添加该目录下所有文件</li>\n</ul>\n</li>\n<li>把项目提交到仓库\n<ul>\n<li>git commit -m &quot; 注释 “”</li>\n</ul>\n</li>\n<li>本地内容上传\n<ul>\n<li>git push (-u) origin main   // 初次上传必须加上 - u</li>\n</ul>\n</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "https://empireofyt.github.io/computer-science/github/github/",
            "url": "https://empireofyt.github.io/computer-science/github/github/",
            "title": "github使用教程",
            "date_published": "2023-02-02T08:12:28.457Z",
            "content_html": "<h1 id=\"github使用教程\"><a class=\"markdownIt-Anchor\" href=\"#github使用教程\">#</a> github 使用教程</h1>\n<h2 id=\"一-首次上传此文件夹\"><a class=\"markdownIt-Anchor\" href=\"#一-首次上传此文件夹\">#</a> 一 首次上传此文件夹</h2>\n<h3 id=\"一-github与git连接本地git仓库\"><a class=\"markdownIt-Anchor\" href=\"#一-github与git连接本地git仓库\">#</a> （一） github 与 git 连接–本地 Git 仓库</h3>\n<ol>\n<li>\n<p>本地文件夹</p>\n<ul>\n<li>右键 - Git Bash-</li>\n<li>输入 “git init” 初始化成一个 Git 可管理的仓库</li>\n</ul>\n</li>\n<li>\n<p>将本地文件 add 到 Git 仓库上</p>\n<ul>\n<li>git add .  //. 表示添加该目录下所有文件</li>\n<li>git status // 用来查看仓库状态</li>\n</ul>\n</li>\n<li>\n<p>把项目提交到仓库</p>\n<ul>\n<li>git commit -m &quot; 注释 “”</li>\n</ul>\n</li>\n</ol>\n<h3 id=\"二-github和git连接远程连接\"><a class=\"markdownIt-Anchor\" href=\"#二-github和git连接远程连接\">#</a> （二） github 和 git 连接–远程连接</h3>\n<ol>\n<li>创建 SSH key（只用一次就行了）</li>\n<li>在 github 上新建仓库</li>\n<li>关联远程仓库\n<ul>\n<li>git remote add origin <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL1hYWCVFRiVCQyU4OCVFOCU4NyVBQSVFNSVCNyVCMSVFNCVCQiU5MyVFNSVCQSU5MyVFRiVCQyU4OQ==\">https://github.com/XXX（自己仓库）</span></li>\n</ul>\n</li>\n<li>本地内容上传\n<ul>\n<li>git push (-u) origin main   // 初次上传必须加上 - u</li>\n</ul>\n</li>\n</ol>\n<h2 id=\"二-后续更新上传\"><a class=\"markdownIt-Anchor\" href=\"#二-后续更新上传\">#</a> 二 后续更新上传</h2>\n<ol>\n<li>将本地文件 add 到 Git 仓库上\n<ul>\n<li>git add .  //. 表示添加该目录下所有文件</li>\n</ul>\n</li>\n<li>把项目提交到仓库\n<ul>\n<li>git commit -m &quot; 注释 “”</li>\n</ul>\n</li>\n<li>本地内容上传\n<ul>\n<li>git push (-u) origin main   // 初次上传必须加上 - u</li>\n</ul>\n</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "https://empireofyt.github.io/computer-science/cpp/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98%E7%AC%94%E8%AE%B0/C++%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/%E5%87%BD%E6%95%B0/",
            "url": "https://empireofyt.github.io/computer-science/cpp/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98%E7%AC%94%E8%AE%B0/C++%E6%8F%90%E9%AB%98%E7%BC%96%E7%A8%8B/%E5%87%BD%E6%95%B0/",
            "title": "函数",
            "date_published": "2023-02-02T08:00:19.613Z",
            "content_html": "<h1 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\">#</a> 函数</h1>\n<p>[TOC]</p>\n<h2 id=\"一-函数的分文件编写\"><a class=\"markdownIt-Anchor\" href=\"#一-函数的分文件编写\">#</a> 一 函数的分文件编写</h2>\n<p>作用： 让代码更清晰</p>\n<p>步骤：</p>\n<ol>\n<li>创建后缀名为.h 的头文件</li>\n<li>创建后缀名为.cpp 的源文件</li>\n<li>在头文件中写函数的声明</li>\n<li>在源文件中写函数的定义</li>\n</ol>\n",
            "tags": []
        },
        {
            "id": "https://empireofyt.github.io/computer-science/cpp/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98%E7%AC%94%E8%AE%B0/README/",
            "url": "https://empireofyt.github.io/computer-science/cpp/%E9%BB%91%E9%A9%AC%E7%A8%8B%E5%BA%8F%E5%91%98%E7%AC%94%E8%AE%B0/README/",
            "title": "黑马程序员课程目录",
            "date_published": "2023-02-02T06:21:30.852Z",
            "content_html": "<h1 id=\"黑马程序员cpp课程笔记\"><a class=\"markdownIt-Anchor\" href=\"#黑马程序员cpp课程笔记\">#</a> 黑马程序员 cpp 课程笔记</h1>\n<h2 id=\"c基础编程\"><a class=\"markdownIt-Anchor\" href=\"#c基础编程\">#</a> C++ 基础编程</h2>\n<h3 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\">#</a> 函数</h3>\n<h3 id=\"指针\"><a class=\"markdownIt-Anchor\" href=\"#指针\">#</a> 指针</h3>\n<h3 id=\"结构体\"><a class=\"markdownIt-Anchor\" href=\"#结构体\">#</a> 结构体</h3>\n<h3 id=\"通讯录管理系统\"><a class=\"markdownIt-Anchor\" href=\"#通讯录管理系统\">#</a> 通讯录管理系统</h3>\n<h2 id=\"c核心编程\"><a class=\"markdownIt-Anchor\" href=\"#c核心编程\">#</a> C++ 核心编程</h2>\n<h3 id=\"内存分区模型\"><a class=\"markdownIt-Anchor\" href=\"#内存分区模型\">#</a> 内存分区模型</h3>\n<h3 id=\"引用\"><a class=\"markdownIt-Anchor\" href=\"#引用\">#</a> 引用</h3>\n<h3 id=\"函数高级\"><a class=\"markdownIt-Anchor\" href=\"#函数高级\">#</a> 函数高级</h3>\n<h3 id=\"类和对象\"><a class=\"markdownIt-Anchor\" href=\"#类和对象\">#</a> 类和对象</h3>\n<h3 id=\"文件操作\"><a class=\"markdownIt-Anchor\" href=\"#文件操作\">#</a> 文件操作</h3>\n<h3 id=\"职工管理系统\"><a class=\"markdownIt-Anchor\" href=\"#职工管理系统\">#</a> 职工管理系统</h3>\n<h2 id=\"c提高编程\"><a class=\"markdownIt-Anchor\" href=\"#c提高编程\">#</a> C++ 提高编程</h2>\n<h3 id=\"模板\"><a class=\"markdownIt-Anchor\" href=\"#模板\">#</a> 模板</h3>\n<h3 id=\"stl初始\"><a class=\"markdownIt-Anchor\" href=\"#stl初始\">#</a> STL 初始</h3>\n<h3 id=\"stl常见容器\"><a class=\"markdownIt-Anchor\" href=\"#stl常见容器\">#</a> STL 常见容器</h3>\n<h3 id=\"stl函数对象\"><a class=\"markdownIt-Anchor\" href=\"#stl函数对象\">#</a> STL 函数对象</h3>\n<h3 id=\"stl-常见算法\"><a class=\"markdownIt-Anchor\" href=\"#stl-常见算法\">#</a> STL 常见算法</h3>\n",
            "tags": []
        },
        {
            "id": "https://empireofyt.github.io/computer-science/algorithm/BFS/",
            "url": "https://empireofyt.github.io/computer-science/algorithm/BFS/",
            "title": "BFS",
            "date_published": "2023-02-01T13:52:41.528Z",
            "content_html": "<h2 id=\"一-应用场景\"><a class=\"markdownIt-Anchor\" href=\"#一-应用场景\">#</a> 一 应用场景</h2>\n<p><strong>找到的路径一定是最短的</strong>，但空间复杂度可能大于 DFS</p>\n<h2 id=\"二-代码框架\"><a class=\"markdownIt-Anchor\" href=\"#二-代码框架\">#</a> 二 代码框架</h2>\n<p>``// 计算从起点 start 到终点 target 的最近距离`</p>\n<p><code>int BFS(Node start, Node target) &#123;</code></p>\n<p>​\t\t  <code>queue&lt;Node&gt; q; // 核心数据结构</code></p>\n<p>​\t\t <code>set&lt;Node&gt; visited; // 避免走回头路</code></p>\n<p>​\t\t <code>q.push(start); // 将起点加入队列</code></p>\n<p>​\t\t <code>visited.insert(start);  int step = 0; // 记录扩散的步数</code> <br>\n <code>while (q not empty) &#123;</code></p>\n<p>​\t            <code>int sz = q.size();</code></p>\n<p>​        <code>/* 将当前队列中的所有节点向四周扩散 */    *</code></p>\n<pre><code>\t`for (int i = 0; i &lt; sz; i++) &#123;`      \t\n</code></pre>\n<p>​\t\t\t\t <code>Node cur = q.front();</code></p>\n<p>​\t\t\t\t  <code>q.pop();</code></p>\n<p><code>/* 划重点：这里判断是否到达终点 */    *</code></p>\n<p>​\t\t\t\t <code>if (cur is target)        return step;</code></p>\n<p><code>/* 将 cur 的相邻节点加入队列 */      *</code></p>\n<p>​\t\t\t\t <code>for (Node x : cur.adj()) &#123;</code></p>\n<p>​\t\t\t\t\t  <code>if (x not in visited) &#123;</code></p>\n<p>​\t\t\t\t\t\t\t\t  <code>q.push(x);</code></p>\n<p>​\t\t\t\t\t\t\t\t  <code>visited.insert(x);</code></p>\n<p><code>&#125;</code></p>\n<p><code>&#125;</code></p>\n<p>​     <code>/* 划重点：更新步数在这里 */</code></p>\n<p><code>step++;</code></p>\n<p><code>&#125;</code></p>\n<p><code>&#125;</code></p>\n",
            "tags": [
                "算法"
            ]
        },
        {
            "id": "https://empireofyt.github.io/happy/blog/",
            "url": "https://empireofyt.github.io/happy/blog/",
            "title": "blog",
            "date_published": "2022-08-30T03:24:34.000Z",
            "content_html": "<h1 id=\"blog\"><a class=\"markdownIt-Anchor\" href=\"#blog\">#</a> blog</h1>\n<p>my blog</p>\n",
            "tags": []
        }
    ]
}